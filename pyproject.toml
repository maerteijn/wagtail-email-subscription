[tool.poetry]
name = "wagtail-email-subscription"
version = "0.0.1"
description = "Wagtail form integration with Email marketing platforms like Active Campaign"
authors = ["Martijn Jacobs <maerteijn@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/maerteijn/wagtail-email-subscription"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]
packages = [
    { include = "wagtail_email_subscription", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
Django = "^3.2"
wagtail = "~2.15"
activecampaign-python = "^1.0.3"
wagtail-generic-chooser = "^0.2.1"

[tool.poetry.dev-dependencies]
flake8 = "~3.8"
flake8-black = "^0.2.1"
flake8-isort =  "4.0"
pylint = "~2.9"
black = "^22.1.0"
psycopg2-binary = "~2.8"
pytest = "^6.2"
pytest-django = "~4.4"
pytest-cov = "~2.11"
pytest-env = "^0.6.2"
poetry-dynamic-versioning = "~0.13"
pytest-pythonpath = "^0.7.3"
requests-mock = "^1.9.2"
wagtail-factories = "^2.0.1"
pytest-mock = "^3.6.0"

[tool.poetry-dynamic-versioning]
enable = true
latest-tag = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
exclude = "/migrations/"

[tool.pylint.messages_control]
disable = "R,C,W5103,W0511"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.master]
init-hook = "import sys; sys.path.append('.')"
ignore = "migrations"

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "sandbox.settings"
testpaths = "tests/"
addopts = "--create-db --no-migrations --cov=wagtail_email_subscription --cov-report xml -W ignore"
python_paths = "sandbox"

[tool.coverage.run]
omit = ["**/migrations/**", "**/tests/**", "sandbox/**"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["raise NotImplementedError"]
